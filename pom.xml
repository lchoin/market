<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.jzf</groupId>
  <artifactId>market</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>market</name>
	<url>http://repo1.maven.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<shiro.version>1.2.5</shiro.version>
	</properties>

	<!-- Inherit defaults from Spring Boot -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.2.RELEASE</version>
	</parent>


	<distributionManagement>
		<repository>
			<id>nexus</id>
			<name>Releases</name>
			<url>http://127.0.0.1:8081/repository/maven-releases/</url>
		</repository>
		<snapshotRepository>
			<id>nexus</id>
			<name>Snapshot</name>
			<url>http://127.0.0.1:8081/repository/maven-snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

	<!-- Add typical dependencies for a web application -->
	<dependencies>
		<!-- 支持web环境 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<!-- AOP -->
		<dependency>  
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		
		<!-- 数据源(据说其性能比常用的 c3p0、tomcat、bone、vibur 这些要高很多。) -->
		<dependency>
		    <groupId>com.zaxxer</groupId>
		    <artifactId>HikariCP</artifactId>
		    <!-- 版本号可以不用指定，Spring Boot会选用合适的版本 -->
		</dependency>

		<!-- jpa：orm规范 ，Hibernate是它的实现-->
<!-- 		<dependency> -->
<!-- 			<groupId>org.springframework.boot</groupId> -->
<!-- 			<artifactId>spring-boot-starter-data-jpa</artifactId> -->
<!-- 		</dependency> -->
<!-- 		<dependency> -->
<!-- 			<groupId>org.hsqldb</groupId> -->
<!-- 			<artifactId>hsqldb</artifactId> -->
<!-- 			<scope>runtime</scope> -->
<!-- 		</dependency> -->
		
		<!-- jdbc连接数据库 -->
		  <dependency>
              <groupId>mysql</groupId>
              <artifactId>mysql-connector-java</artifactId>
          </dependency>
<!--         <dependency> -->
<!--             <groupId>org.springframework.boot</groupId> -->
<!--             <artifactId>spring-boot-starter-jdbc</artifactId> -->
<!--         </dependency> -->
        
        <!-- Mybatis连接数据库 -->
        <dependency>
		    <groupId>org.mybatis.spring.boot</groupId>
		    <artifactId>mybatis-spring-boot-starter</artifactId>
		    <version>1.1.1</version>
		</dependency>

		<!--Mybatis分页-->
		<dependency>
			<groupId>com.github.pagehelper</groupId>
			<artifactId>pagehelper</artifactId>
			<version>4.1.4</version>
		</dependency>



		<!-- Mybatis反向生成 -->
<!-- 		<dependency> -->
<!-- 		    <groupId>org.mybatis.generator</groupId> -->
<!-- 		    <artifactId>mybatis-generator-core</artifactId> -->
<!-- 		    <version>1.3.5</version> -->
<!-- 		</dependency> -->
		
		<!-- 通用Mapper -->
<!-- 		<dependency> -->
<!-- 			<groupId>com.github.abel533</groupId> -->
<!-- 			<artifactId>mapper</artifactId> -->
<!-- 			<version>2.3.4</version> -->
<!-- 		</dependency> -->
 
		<!-- 解析jsp -->
	    <dependency>
	        <groupId>org.apache.tomcat.embed</groupId>
	        <artifactId>tomcat-embed-jasper</artifactId>
	    </dependency>
	     <!-- servlet依赖. -->
         <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <scope>provided</scope>
         </dependency>
         <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
         </dependency>
         <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>
              
    
    	<!-- shiro -->
    	<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-core</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-web</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-ehcache</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		
		<!-- 
			guava:  Guava工程包含了若干被Google的 Java项目广泛依赖 的核心库，
			例如：集合 [collections] 、缓存 [caching] 、原生类型支持 [primitives support] 、
			并发库 [concurrency libraries] 、通用注解 [common annotations] 、
			字符串处理 [string processing] 、I/O 等等
		-->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>19.0</version>
		</dependency>
		
		<!-- common -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.3.2</version>
		</dependency>
		<dependency>
		    <groupId>com.thoughtworks.xstream</groupId>
		    <artifactId>xstream</artifactId>
		    <version>1.4.9</version>
		</dependency>
		
		<!-- http客户端 -->
		<!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
		<dependency>
		    <groupId>org.apache.httpcomponents</groupId>
		    <artifactId>httpclient</artifactId>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/com.taobao/tdhs-java-client -->
		<dependency>
		    <groupId>com.taobao</groupId>
		    <artifactId>taobao-java</artifactId>
		    <version>1.0</version>
		</dependency>
		
		<!-- Jackson Json处理工具包 -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
<!-- 		<dependency> -->
<!-- 		    <groupId>com.google.code.gson</groupId> -->
<!-- 		    <artifactId>gson</artifactId> -->
<!-- 		</dependency> -->

		<!--支付宝-->
        <dependency>
            <groupId>com.alipay</groupId>
            <artifactId>alipay-sdk-java</artifactId>
            <version>1.0.0.RELEASE</version>
        </dependency>

		<dependency>
			<groupId>com.aliyun.api.gateway</groupId>
			<artifactId>java.demo</artifactId>
			<version>1.0</version>
		</dependency>
		
		<!-- 
			 1.自动重启： 当Classpath里的文件发生变化时，自动重启运行中的应用程序。
			 2.LiveReload支持：对资源的修改自动触发浏览器刷新。
			 3.远程开发：远程部署时支持自动重启和LiveReload。
			 4.默认的开发时属性值：为一些属性提供有意义的默认开发时属性值。
			当应用程序以完整打包好的JAR或WAR文件形式运行时，开发者工具会被禁用，所以没有必
			要在构建生产部署包前移除这个依赖。
		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>
	</dependencies>

	<!-- Package as an executable JAR -->
	<build>
        <finalName>market</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			
			<plugin>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-maven-plugin</artifactId>
                <version>1.3.5</version>
                <configuration>
                    <verbose>true</verbose>
                    <overwrite>true</overwrite>
                </configuration>
            </plugin>
		</plugins>
	</build>

	<!-- Allow access to Spring milestones and snapshots -->
	<!-- (you don't need this if you are using anything after 0.5.0.RELEASE) -->
	<repositories>
		<repository>
			<id>spring-snapshots</id>
			<url>http://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<url>http://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		
		<!-- 更换远程仓库 -->
		<repository>
			<id>maven2</id>
			<url>http://repo1.maven.org/maven2/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>

	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-snapshots</id>
			<url>http://repo.spring.io/snapshot</url>
		</pluginRepository>
		<pluginRepository>
			<id>spring-milestones</id>
			<url>http://repo.spring.io/milestone</url>
		</pluginRepository>
	</pluginRepositories>
</project>
